#!/usr/bin/env python
#
# ~/.local/bin/my-netrc
#
# Parse .netrc for usernames and passwords. For clients with a password
# eval feature, but no built-in netrc support.
import netrc
import sys

def parse_netrc(host, token=None):
    try:
        authenticators = netrc.netrc().authenticators(host)
    except Exception as error:
        exit(str(error))
    if authenticators is None:
        exit('my-netrc: ' + host + ' not found')
    elif token == 'login':
        if authenticators[0] is not None:
            print(authenticators[0])
        else:
            exit(host + ' contains no login token')
    elif token == 'account':
        if authenticators[1] is not None:
            print(authenticators[1])
        else:
            exit(host + ' contains no account token')
    elif token == 'password':
        if authenticators[2] is not None:
            print(authenticators[2])
        else:
            exit(host + ' contains no password token')
    else:
        if authenticators[0] is not None:
            print('login: ' + authenticators[0])
        if authenticators[1] is not None:
            print('account: ' + authenticators[1])
        if authenticators[2] is not None:
            print('password: ' + authenticators[2])

if __name__ == "__main__":
    if len(sys.argv) < 2:
        exit('my-netrc: No request made. Exiting')
    elif len(sys.argv) == 2:
        parse_netrc(sys.argv[1])
    else:
        parse_netrc(sys.argv[1], sys.argv[2])
